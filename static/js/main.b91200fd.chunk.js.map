{"version":3,"sources":["reducers/first_reducers.js","actions/index.js","reducers/reducer_weather.js","reducers/index.js","containers/search_bar.js","components/chart.js","containers/weather_list.js","components/App.js","index.js"],"names":["initialState","FirstReducer","state","arguments","length","undefined","type","ROOT_URL","concat","process","fetchWeather","city","url","payload","axios","get","WeatherReducer","action","data","Object","toConsumableArray","rootReducer","combineReducers","weather","SearchBar","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","term","onInputChange","bind","assertThisInitialized","onFormSubmit","event","setState","target","value","preventDefault","react_default","a","createElement","onSubmit","className","placeholder","onChange","Component","connect","dispatch","bindActionCreators","chart","build","width","height","color","_","round","sum","units","WeatherList","cityData","name","temps","list","map","main","temp","pressures","pressure","humidities","humidity","key","renderWeather","_ref","App","search_bar","weather_list","createStoreWithMiddleware","applyMiddleware","ReduxPromise","createStore","ReactDOM","render","es","store","components_App","document","getElementById"],"mappings":"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","file":"static/js/main.b91200fd.chunk.js","sourcesContent":["const initialState = [1, 2, 3, 4, 5];\n\nconst FirstReducer = (state = initialState, action) => {\n  switch (action.type) {\n    default:\n      return state;\n  }\n};\n\nexport default FirstReducer;\n","import axios from 'axios';\n\nexport const ADD_TEXT_T0_SCREEN = 'ADD_TEXT_T0_SCREEN';\nexport const FETCH_WEATHER = 'FETCH_WEATHER';\n\nconst API_KEY = process.env.REACT_APP_API_KEY;\n\nconst ROOT_URL = `https://api.openweathermap.org/data/2.5/forecast?appid=${API_KEY}`;\n\nexport const fetchWeather = (city) => {\n  const url = `${ROOT_URL}&q=${city},fi`;\n  const request = axios.get(url);\n\n  return {\n    type: FETCH_WEATHER,\n    payload: request,\n  };\n};\n\nexport const addTextToScreen = () => {\n  return {\n    type: ADD_TEXT_T0_SCREEN,\n    payload: ADD_TEXT_T0_SCREEN,\n  };\n};\n","import { FETCH_WEATHER } from \"../actions\";\n\nconst WeatherReducer = (state = [], action) => {\n  switch (action.type) {\n    case FETCH_WEATHER:\n      return [action.payload.data, ...state];\n    default:\n      return state;\n  }\n};\n\nexport default WeatherReducer;\n","import { combineReducers } from \"redux\";\n//List of reducers to be combined\nimport FirstReducer from \"./first_reducers\";\nimport WeatherReducer from \"./reducer_weather\";\n\nconst rootReducer = combineReducers({\n  // List of reducers seperated by commas\n  FirstReducer,\n  weather: WeatherReducer\n});\n\nexport default rootReducer;\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport { fetchWeather } from \"../actions\";\n\nclass SearchBar extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { term: \"\" };\n\n    this.onInputChange = this.onInputChange.bind(this);\n    this.onFormSubmit = this.onFormSubmit.bind(this);\n  }\n\n  onInputChange(event) {\n    this.setState({ term: event.target.value });\n  }\n\n  onFormSubmit(event) {\n    event.preventDefault();\n\n    // we fetch data here\n    this.props.fetchWeather(this.state.term);\n    this.setState({ term: \"\" });\n  }\n\n  render() {\n    return (\n      <form onSubmit={this.onFormSubmit} className=\"input-group\">\n        <input\n          placeholder=\"Get a five-day forecast in your favorite cities\"\n          className=\"form-control\"\n          value={this.state.term}\n          onChange={this.onInputChange}\n        />\n        <span className=\"input-group-btn\">\n          <button type=\"submit\" className=\"btn btn-secondary\">\n            Submit\n          </button>\n        </span>\n      </form>\n    );\n  }\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators({ fetchWeather }, dispatch);\n}\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(SearchBar);\n","import _ from 'lodash';\nimport React from 'react';\nimport {\n  Sparklines,\n  SparklinesLine,\n  SparklinesReferenceLine,\n} from 'react-sparklines';\n\nfunction average(data) {\n  return _.round(_.sum(data) / data.length);\n}\n\nexport default (props) => {\n  return (\n    <div>\n      <Sparklines width={100} height={20} data={props.data}>\n        <SparklinesLine color={props.color} />\n        <SparklinesReferenceLine type=\"avg\" />\n      </Sparklines>\n      <div>\n        {average(props.data)} {props.units}\n      </div>\n    </div>\n  );\n};\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport Chart from \"../components/chart\";\n\nclass WeatherList extends Component {\n  renderWeather(cityData) {\n    const name = cityData.city.name;\n    const temps = cityData.list.map(weather => weather.main.temp);\n    const pressures = cityData.list.map(weather => weather.main.pressure);\n    const humidities = cityData.list.map(weather => weather.main.humidity);\n\n    return (\n      <tr key={name}>\n        <td>{name}</td>\n        <td>\n          <Chart data={temps} color=\"orange\" units=\"K\" />\n        </td>\n        <td>\n          <Chart data={pressures} color=\"green\" units=\"hPa\" />\n        </td>\n        <td>\n          <Chart data={humidities} color=\"black\" units=\"%\" />\n        </td>\n      </tr>\n    );\n  }\n\n  render() {\n    return (\n      <table className=\"table table-hover\">\n        <thead>\n          <tr>\n            <th>City</th>\n            <th>Temperature (K)</th>\n            <th>Pressure (hPa)</th>\n            <th>Humidity (%)</th>\n          </tr>\n        </thead>\n        <tbody>{this.props.weather.map(this.renderWeather)}</tbody>\n      </table>\n    );\n  }\n}\n\nfunction mapStateToProps({ weather }) {\n  return {\n    weather\n  };\n}\n\nexport default connect(mapStateToProps)(WeatherList);\n","import React, { Component } from \"react\";\nimport \"../styles/App.css\";\nimport SearchBar from \"../containers/search_bar\";\nimport WeatherList from \"../containers/weather_list\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <SearchBar />\n        <WeatherList />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport rootReducer from './reducers';\nimport App from './components/App';\n\n// Below are of some middleware being imported\n// import { promiseMiddleware } from \"redux-promise\";\n// import ReduxThunk from \"redux-thunk\";\n// import logger from \"redux-logger\";\nimport ReduxPromise from 'redux-promise';\n\nconst createStoreWithMiddleware = applyMiddleware(ReduxPromise)(createStore);\n// Below is the list of middleware imported listed here seperated by commas\n//promiseMiddleware,\n//ReduxThunk,\n//logger\n\nReactDOM.render(\n  <Provider store={createStoreWithMiddleware(rootReducer)}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}